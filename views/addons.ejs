<h3 class="container">Addon Administration Page</h3>
<ol class="breadcrumb container">
  <li><a href="/admin">Admin</a></li>
  <li class="active">Addon</li>
</ol>
<div id="container" class="container">
	<table id="addonsTable" class="table">
		<tr>
			<th>Name</th>
			<th>Price</th>
			<th>Action</th>
		</tr>
		<tr v-repeat='addons'>
			<td>{{name}}</td>
			<td>{{price}}</td>
			<td>
				<button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#editModal" data-pk="{{id}}" data-addonname='{{name}}' data-addonprice='{{price}}'>Edit</button> 			
				<button class="btn btn-danger btn-sm" data-pk="{{id}}" v-on="click: onDelete(id, $event)">Delete</button>
			</td>
		</tr>
	</table>
	<button id="add" class="btn btn-primary" data-toggle="modal" data-target="#editModal">Create</button>
</div>

<div id="editModal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="modalLabel">Create</h4>
      </div>
      <div class="modal-body">
		<input id='pk' type="hidden" class="form-control" />
		<div class="input-group">
		  <span class="input-group-addon" id="addonNameLabel">Addon Name</span>
		  <input id='addonName' type="text" class="form-control" placeholder="Addon Name" />
		</div><br />
		<div class="input-group">
		  <span class="input-group-addon" id="addonPriceLabel">Addon Price</span>
		  <input id='addonPrice' type="text" class="form-control" placeholder="Addon Price" />
		</div>
      </div>
      <div class="modal-footer">
        <button id="cancelChange" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button id="saveChange" type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>
 <script>
	$(function(){
		var addonController = new Vue({
			el: '#container',
			methods: {
				onDelete: function(id, e){
					if(confirm("Delete this record?")){
						$.ajax({
							type: "DELETE",
							url: '/addon/delete',
							data: {id: id},
							dataType: 'json',
							success: function(result){
								console.log(result.message);
								load();
							},
							error: function(jqXhr, textStatus, errorThrown){
								console.log(errorThrown);
							}
						});
					}
				}
			}
		});

		//edit or create flag
		var METHOD = "POST";
		var url = "/addon/create";

		//get addons
		function load(){
			$.ajax({
				type: "GET",
				url: '/addons',
				dataType: 'json',
				beforeSend: function (xhr) {

				},
				complete: function(){
					
				},
				success: function (result, textStatus, jqXHR) {								
					addonController.$data = result;
				},
				error: function(xhr, textStatus, errorThrown){
					alert("Error in getting addons "+textStatus);
				}
			});
		}
		load();
		

		//edit modal
		$('#editModal').on('show.bs.modal', function (e) {
 			var target = e.relatedTarget;
 			var name = target.dataset.addonname;
 			var price = target.dataset.addonprice;
			
 			if(name){
 				METHOD = "PUT";
				url = "/addon/update"
 			}
			
			$("#modalLabel").text(target.textContent);
			
			$('#pk').val(target.dataset.pk);
 			$('#addonName').val(name);
 			$('#addonPrice').val(price);
		});
		
		$('#editModal').on('hidden.bs.modal', function (e) {
			$('#addonName').val('');
 			$('#addonPrice').val('');
			
			METHOD = "POST";
			url = "/addon/create";
		});
		
		//save changes
		$('#saveChange').click(function(){
			//confirm("Save Changes?");
			var addon = {};
			var pk = $('#pk').val();
			var name = $('#addonName').val();
 			var price = $('#addonPrice').val();
 			$('#editModal').modal('hide')
			
			if(METHOD == 'POST'){
				addon = {
					name: name,
					price: price
				}
			}else if(METHOD == 'PUT'){
				addon = {
					id: pk,
					name: name,
					price: price
				}
			}

			$.ajax({
				type: METHOD,
				url: url,
				data: addon,
				dataType: 'json',
				success: function(result){
					console.log(result.message);
					load();
				},
				error: function(jqXhr, textStatus, errorThrown){
					console.log(errorThrown);
				}
			});
		});
		
	})
 </script>